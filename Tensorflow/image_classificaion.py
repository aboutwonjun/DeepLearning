# -*- coding: utf-8 -*-
"""image_classificaion.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11LkHiJSdygqwkHkH6T4ylA8X9tvvDUio
"""

#이미지 
import cv2
import matplotlib.pyplot as plt

#데이터 셋 불러오기
import tensorflow_datasets as tfds
import tensorflow as tf

data_train, ds_info = tfds.load('cats_vs_dogs', split=[tfds.Split.TRAIN], with_info=True) #따로 학습, 훈련 데이터가 안 나눠짐
ds_info

images = [one['image'].numpy() for one in data_train[0].take(30)] #numpy형식으로 변환 후 불러옴
len(images)

plt.imshow(images[10])
plt.axis('off') #축 없애기

"""# 모델 구축"""

resnet50_pre = tf.keras.applications.resnet.ResNet50(weights='imagenet', input_shape=(224,224,3)) #이미 학습된 모델
resnet50_pre.summary()

from tensorflow.keras.applications.imagenet_utils import decode_predictions
# 결과를 어떤 대상으로 바꿔주는~

#이미지 예측 합수

def pred_img(img):
  plt.imshow(img)
  plt.axis('off') #이미지 처음에 보여줌 
  plt.show()

  img_resized = cv2.resize(img, (224,224))
  pred = resnet50_pre.predict(img_resized.reshape([1, 224,224,3])) # 
  decode_pred = decode_predictions(pred)

  for i, instance in enumerate(decode_pred[0]):
    print('{}위 : {} ({:.2f}%)'.format(i+1, instance[1], instance[2]* 100))

#pred_img(images[1])

for i in range(20):
  i += 1
  pred_img(images[i])

|